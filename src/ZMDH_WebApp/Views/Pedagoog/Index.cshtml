@model PaginatedList<ZMDH_WebApp.Models.Pedagoog>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Zoek Naam: <input type="text" name="SearchString" value='@ViewData["CurrentFilter"]' />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Terug naar lijst</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder='@ViewData["NameSortParm"]' asp-route-currentFilter='@ViewData["CurrentFilter"]'>Naam</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder='@ViewData["SpecSortParm"]' asp-route-currentFilter='@ViewData["CurrentFilter"]'>Specialisatie</a>
            </th>
            <th>
                Behandeling
            </th>
            <th>
                Username
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder='@ViewData["EmailSortParm"]' asp-route-currentFilter='@ViewData["CurrentFilter"]'>E-Mail</a>
            </th>
            <th>
                Telefoonnummer
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Specialization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Therapy.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NormalizedUserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NormalizedEmail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailConfirmed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PasswordHash)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SecurityStamp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ConcurrencyStamp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
<<<<<<< Updated upstream
<<<<<<< Updated upstream
                <a asp-action="Edit" asp-route-id="@item.Id">Pas aan</a> |
=======
=======
>>>>>>> Stashed changes
                @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LockoutEnd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LockoutEnabled)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccessFailedCount)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
>>>>>>> Stashed changes
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Verwijder</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Terug
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Volgende
</a>